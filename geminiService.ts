
import { GoogleGenAI } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

export const generateOutfitImage = async (prompt: string): Promise<string> => {
  try {
    const response = await ai.models.generateImages({
        model: 'imagen-4.0-generate-001',
        prompt: `A photorealistic image of a fashion model wearing the following outfit: ${prompt}. The background should be a neutral studio setting. Full body shot.`,
        config: {
          numberOfImages: 1,
          outputMimeType: 'image/png',
          aspectRatio: '9:16', // Portrait for fashion/mobile view
        },
    });

    if (!response.generatedImages || response.generatedImages.length === 0) {
      throw new Error("No image was generated by the API.");
    }
    
    const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
    return `data:image/png;base64,${base64ImageBytes}`;

  } catch (error) {
    console.error("Error calling Gemini API:", error);
    throw new Error("Could not generate image due to an API error.");
  }
};
